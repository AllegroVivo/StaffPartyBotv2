from __future__ import annotations

from typing import TYPE_CHECKING

if TYPE_CHECKING:
    pass
################################################################################

__all__ = ("Identifiable", )

################################################################################
class Identifiable:

    __slots__ = (
        "_id",
    )

################################################################################
    def __init__(self, _id: int) -> None:

        self._id: int = _id

################################################################################
    def __eq__(self, other: Identifiable) -> bool:

        return self._id == other._id

################################################################################
    def __hash__(self) -> int:

        return hash(self._id)

################################################################################
    @property
    def id(self) -> int:

        return self._id

################################################################################
